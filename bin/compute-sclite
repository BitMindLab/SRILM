#!/bin/sh
#
# compute-sclite --
#	compute word error rate from a sentid hyp file and a sentid reference
#	file, using the NIST 'sclite' program
#
# $Header: /home/srilm/devel/utils/src/RCS/compute-sclite,v 1.15 2001/05/07 18:33:28 stolcke Exp $
#

if [ $# -lt 2 ]; then
	echo "usage: $0 [-v] -h hyps -r refs [-S id-subset] [-M|-multiwords] [-g glm-file] [sclite-options ...]" >&2
	echo "   or  $0 hyps refs" >&2
	exit 2
elif [ $# -eq 2 ]; then
	# old syntax
	hyps=${1}
	refs=${2}
else
	# parse arguments
	while [ $# -gt 0 ]; do
		case "$1" in
		-v)	verbose=1 ;;
		-r)	refs=$2; shift ;;
		-h)	hyps="$hyps $2"
			name=`basename $2`
			shift ;;
		-S)	subset=$2; shift ;;
		-M|-multiwords)
			multiwords=1 ;;
		-H)	remove_hesitations=1 ;;
		-g)	glmfile=$2; shift ;;
		*)	options="$options $1" ;;
		esac
		shift
	done
fi

sentids=/tmp/ce.sentids$$
speakers=/tmp/ce.speakers$$
sortedrefs=/tmp/ce.refs$$
sortedhyps=/tmp/ce.hyps$$

trap '/bin/rm -f $sentids $speakers $sortedrefs $sortedhyps' 0 1 2 13 15

#
# extract and sort sentids from hyps
#
case "$hyps" in 
*.ctm)
     gawk '!/^;;/ { print $1 "_" $2 }' $hyps ;;
*)   gawk '{ print $1 }' $hyps ;;
esac | \
sort | \
if [ -n "$subset" ]; then
	join - $subset
else
	cat
fi > $sentids


#
# extract and sort refs for these sentids
#
case "$refs" in
*.stm) # NIST scoring: 
    sed 's,\([-_][ABab]\)[-_].*,\1,' $sentids | uniq | \
				tr '[A-Z]' '[a-z]' > $speakers 
    if [ -n "$glmfile" ]; then
	csrfilt.sh -i stm -dh $glmfile
    else
	cat
    fi < $refs | \
    gawk '!/^;;/ { print tolower($1 "_" $2), $0 }' | \
    join - $speakers | \
    gawk '{ $1 = ""; $7 = "<>"; print }' > $sortedrefs
    ;;
*)  sort "$refs" | join - $sentids | \
     gawk '{ if (multiwords) for (i = 2; i <= NF; i++) \
		gsub("_", " ", $i); print }'\
	    multiwords=$multiwords | \
     sed -e 's,\[[^]]*\],,g' | \
     sentid-to-sclite \
	    > $sortedrefs
    ;;
esac

#
# sort and condition hyps
#
case "$refs" in
*.stm) # NIST scoring
    case "$hyps" in 
    *.ctm)
	gawk '!/^;;/ { print tolower($1 "_" $2), $0 }' $hyps | \
	join - $speakers | \
	gawk '{ $1 = ""; print }' ;;
    *)  sort $hyps | join - $sentids | sentid-to-ctm  ;;
    esac | \
    if [ -n "$glmfile" ]; then
	csrfilt.sh -i ctm -dh $glmfile | \
	if [ -n "$remove_hesitations" ]; then
		grep -v '%HESITATION'
	else
		cat
	fi
    else
	cat
    fi > $sortedhyps
    ;;
*)  sort $hyps | join - $sentids | \
     gawk '{ if (multiwords) for (i = 2; i <= NF; i++) gsub("_", " ", $i); print }'\
	    multiwords=$multiwords | \
     sed -e 's,\[[^]]*\],,g' \
	    -e 's,<[^>]*>,,g' \
	    -e 's,@reject@,,g' \
	    -e 's,-pau-,,g' | \
     sentid-to-sclite \
	    > $sortedhyps
     ;;
esac

[ "$verbose" ] && set -x

case "$refs" in
*.stm) # NIST scoring
    sclite -f 0 -O . -n $name \
	    -h $sortedhyps ctm $name -r $sortedrefs stm  \
	    -D $options
    ;;
*)  sclite -f 0 -O . -n $name \
	    -h $sortedhyps trn $name -r $sortedrefs trn  \
	    -i swb $options
    ;;
esac

