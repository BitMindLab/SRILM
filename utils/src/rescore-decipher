#!/bin/sh
#
# rescore-nbest --
#	generate scores from Decipher(TM) n-best lists
#
# $Header: /home/srilm/devel/utils/src/RCS/rescore-decipher,v 1.18 2000/03/16 05:46:38 stolcke Exp $
#

bytelog=0
nodecipherlm=0
multiwords=0
norescore=0
decipher_lmw=8
decipher_wtw=0

while [ $# -gt 0 ]
do
    case "$1" in
    -bytelog)	
	    bytelog=1
	    ;;
    -nodecipherlm)
	    nodecipherlm=1
	    ;;
    -multiwords)
	    multiwords=1
	    ;;
    -norescore)
	    norescore=1
	    ;;
    -*)	echo "$0: unknown option $1" >&2
	    exit 2 ;;
    *)	    break
	    ;;
    esac

    shift
done

if [ $# -lt 3  ]; then
    {
	echo "usage: $0 [-bytelog] [-nodecipherlm] [-multiwords] [-norescore] nbest-file-list score-dir lm-options ..." >&2
	echo "where"
	echo "	-bytelog	produces bytelog scaled scores"
	echo "	-nodecipherlm	avoids Decipher LM score computation"
	echo "	-multiwords	expand multiwords into constituent words"
	echo "	-norescore	don't rescore LM, just extract scores"
    } >&2
    exit 1
fi

filelist="$1"
scoredir="$2"
shift; shift

# when not rescoring need to get decipher lmw and wtw from remaining options
if [ $norescore -gt 0 ]; then
    while [ $# -gt 0 ]
    do
	case "$1" in
	-decipher-lmw)	
		decipher_lmw=$2
		shift
		;;
	-decipher-wtw)
		decipher_wtw=$2
		shift
		;;
	*)	shift
		;;
	esac
    done
fi

#
# STRATEGY:
#	Concatenate hyps for all nbest list, record number of hyps for
#		each file in the output stream
#	Feed to ngram -rescore (using lm-options)
#	Parse ngram output into lm scores and deposit into target files
#

escape="***FILE:"

cat $filelist | ( \
while read filename rest; do
	case $filename in
	# preserve LMstate labels in the file list and pass them to ngram
	"<LMstate>")	echo $filename $rest
			continue ;;
	*.Z)		cat=zcat ;;
	*.gz)		cat="gunzip -c" ;;
	*)		cat=cat ;;
	esac
	$cat $filename | \
gawk '
BEGIN {
	filename = "";
	numhyps = 0;
	nbestformat = 0;

	# constants
	bytelogscale = 2.30258509299404568402 * 10000.5 / 1024.0;
	pause = "-pau-";
}

function bytelog2log10(x) {
	return x / bytelogscale;
}

NR == 1 {
	sentid = filename;
	sub("^.*/", "", sentid);
	sub("\\.gz$", "", sentid);
	sub("\\.Z$", "", sentid);
	sub("\\.score$", "", sentid);
	sub("\\.wv$", "", sentid);
	sub("\\.wav$", "", sentid);
	sub("\\.wav_cep$", "", sentid);
	print escape, sentid ".score" ;
}
/^NBestList1\.0/ {
	nbestformat = 1;
	if (nodecipherlm) {
	    printf "%s: -nodecipherlm ineffective for NBestList1.0\n", filename > "/dev/stderr" ;
	}
	next;
}
/^NBestList2\.0/ {
	nbestformat = 2;
	next;
}
{
	numhyps ++;
	if (nbestformat == 0) {
	    if (multiwords) {
		gsub("_", " ", $0);
	    }
	    print;
	} else if (nbestformat == 1) {
	    if (multiwords) {
		gsub("_", " ", $0);
	    }
	    if (norescore) {
		# convert to SRILM format
		score = substr($1,2,length($1)-2);
		$1 = "";
	    	print bytelog2log10(score), 0, 0, $0;
	    } else {
		# keep Decipher format
		print;
	    }
	} else if (nbestformat == 2) {
	    # compute total AC and LM scores 
	    ac_score = 0;
	    lm_score = 0;
	    num_words = 0;
	    num_pauses = 0;

	    words = "";
	    for (i = 2; i <= NF; i += 11) {
		words = words " " $i;

		num_words ++;
		if ($i == pause) num_pauses ++;

		ac_score += $(i + 9);
		lm_score += $(i + 7);
	    }

	    if (multiwords) {
		gsub("_", " ", words);
	    }

	    if (norescore) {
		# convert to SRILM nbest format
		# NOTES:
		# - subtract Decipher WTW (including for pauses!)
		# - compute number of words WITHOUT pauses for output
		print bytelog2log10(ac_score), \
			bytelog2log10(lm_score/decipher_lmw) - \
				numwords * decipher_wtw,  \
			split(words, dummy) - num_pauses, words;
	    } else if (nodecipherlm) {
		# output only acoustic score in Decipher format
		print "(" ac_score ")" words;
	    } else {
		# output combined score in Decipher format
		print $1, words;
	    }
	}
}
END {
	if (numhyps == 0) {
		print "WARNING: nbest list " filename " is empty" \
			> "/dev/stderr" ;
	}
}
' filename=$filename escape="$escape" \
  nodecipherlm=$nodecipherlm multiwords=$multiwords \
  norescore=$norescore decipher_lmw=$decipher_lmw decipher_wtw=$decipher_wtw
done
) | \
if [ $norescore -gt 0 ]; then
    cat
else
    ngram -debug 1 -rescore - -rescore-lmw 1 -rescore-wtw 1 \
		-escape "$escape " "$@" 
fi | \
gawk -v bytelog=$bytelog '
BEGIN {
	currentfile = "";
	scoredir = "";
	scorefile = "";
	numhyps = 0;
	bytelogscale = 2.30258509299404568402 * 10000.5 / 1024.0;
}
$1 == escape {
	if (currentfile) {
		close(scorefile);
	}
	currentfile = $2;
	scorefile = "gzip > " scoredir "/" currentfile ".gz";
	printf "processing hyps for %s\n", currentfile \
		> "/dev/stderr" ;
	hypno = 0;
	next;
}
{
	if (bytelog) {
	    $1 = $1 * bytelogscale;
	    $2 = $2 * bytelogscale;
	}
	print | scorefile;
}
END {
	if (currentfile) {
		close(scorefile);
	}
}
' scoredir=$scoredir escape="$escape" bytelog=$bytelog

