#!/usr/local/bin/gawk -f
#
# nbest-posteriors --
#	rescale the scores in an nbest list to reflect weighted posterior
#	probabilities
#
# usage: nbest-posteriors [ weight=W lmw=LMW wtw=WTW postscale=S max_nbest=M ] NBEST-FILE
#
# The output is the same input NBEST-FILE with acoustic scores set to
# the log10 of the posterior hyp proabilities and LM scores set to zero.
# postscale=S attenuates the posterior distribution by dividing combined log 
# scores by S (the default is S=LMW).
#
# If weight=W is specified the posteriors are multiplied by W.
# (This is useful to combine multiple nbest lists in a weighted fashion).
# The input should be in SRILM nbest-format.
#
# $Header: /home/srilm/devel/utils/src/RCS/nbest-posteriors,v 1.3 2000/03/25 22:41:36 stolcke Exp $
#

BEGIN {
	M_LN10 = 2.30258509299404568402;

	weight = 1.0;
	lmw = 8.0;
	wtw = 0.0;
	postscale = 0;
	multiwords = 1
	max_nbest = 0;

	total_numerator = 0;
}

function log10(x) {
        return log(x)/M_LN10;
}

# by default, use posterior scale = lmw
NR == 1 {
	if (!postscale) {
		postscale = lmw;
	}
}

NF >= 3 {
	if (max_nbest && num_hyps == max_nbest) exit;

	num_hyps ++;

	total_score = ($1 + lmw * $2 + wtw * $3)/postscale;

	if (num_hyps == 1) {
		score_offset = total_score;
	}

	total_score -= score_offset;

	#
	# store posteriors and hyp words
	#
	posteriors[num_hyps] = 10**total_score;
	total_numerator += posteriors[NR];

	num_words[num_hyps] = $3;

	$1 = $2 = $3 = "";
	if (multiwords) {
		gsub("_", " ");
	}
	hyps[num_hyps] = $0;
}

END {
	for (i = 1; i <= num_hyps; i ++) {
		print log10(weight * posteriors[i]/total_numerator), \
			0, num_words[i], hyps[i];
	}
}

